@using Monambike.Web.Models
@using Monambike.Web.Utilities

@page "/projects"
@page "/myprojects"

<!-- MY PROJECTS -->
<section class="site-section site-section--presentation">
    <h2 class="site-section--title">MY PROJECTS</h2>
    <div class="site-section--body">
        <div class="site-section--social-media--containers">
            <ul>
                @foreach (var project in Projects)
                {
                    <li>
                        <h4>@project.Name</h4>
                        <p>@project.Description</p>
                        <img src="@project.ImagePath" alt="@project.Name Image" title="Image from @project.Name."/>

                        @foreach (var link in project.Links)
                        {
                            <div>
                                <img src="@link.SocialMedia.IconPath"/>
                                <a href="@link.Url" title="@link.HoverInformation">@link.Title (@link.SocialMedia.Name)</a>
                            </div>
                        }
                        @foreach (var programmingLanguage in project.ProgrammingLanguages)
                        {
                            <span style="background-color: @programmingLanguage.BackgroundColor;">@programmingLanguage.Name</span>
                        }
                    </li>
                }
            </ul>
        </div>
    </div>
</section>

@code {
    private List<Project> Projects { get; set; } = new();

    protected override void OnInitialized()
    {
        Projects = GetSampleProjects();
    }

    public static List<Project> GetSampleProjects()
    {
        var projects = new List<Project>
        {
            new Project(
                "Project Hanabi",
                "A personal project of a web application made primarily for testing and strengthen my habilities with programming and languages..",
                "/images/project1.jpg",
                new List<Link>
                {
                    GitHub.ProjectHanabi,
                },
                new List<ProgrammingLanguage> { ProgrammingLanguage.HTML, ProgrammingLanguage.JavaScript }
            )
        };

        return projects;
    }
}